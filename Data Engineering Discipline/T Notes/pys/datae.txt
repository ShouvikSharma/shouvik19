view: _core_loan_customer_application {
  label: "Loan Customer Application - Core"
  sql_table_name: avant.prod.dw.dw_orig.loan_customer_application ;;

  dimension: loan_customer_application_uuid {
    label: "Loan Customer Application UUID"
    description: "Unique external identifier for the application - this value will be unique for each application"
    primary_key: yes
    type: string
    sql: ${TABLE}.loan_customer_application_uuid ;;
  }

  dimension: loan_customer_application_id {
    description: "Unique internal (simple) identifier for the application - this value will be unique for each application"
    type: number
    value_format_name: id
    sql: ${TABLE}.loan_customer_application_id ;;
  }

  measure: count {
    description: "Count of records in the data set"
    type: count
    value_format_name: decimal_0
    drill_fields: [loan_cust_app_drill_fields*]
  }

  measure: count_distinct_applications {
    description: "Count of distinct CC account customer application records in the data set"
    type: count_distinct
    sql: ${loan_customer_application_uuid} ;;
    value_format_name: decimal_0
    drill_fields: [loan_cust_app_drill_fields*]
  }

  dimension_group: created {
    description: "CST timestamp representing the time that the application object was created, indicating that the user began filling out information on step 1 or we first received an inbound post request from a lead provider"
    type: time
    timeframes: [time, date, week, month, quarter, raw, year, month_name, day_of_week]
    sql: ${TABLE}.created_time ;;
  }

  dimension: stage {
    description: "Current stage that the application is at in the application funnel.
                  The following statuses indicate that the application was completed and issued: completed, journey_complete (cross-sell), verification (in certain edge cases).
                  The other statuses generally indicate where the application currently stands (if it is open) or where it was left when it closed."
    type: string
    sql: ${TABLE}.stage ;;
  }

  dimension: status {
    description: "Indicates the status of the application, which should largely just be open or closed"
    suggestions: ["closed", "open"]
    type: string
    sql: ${TABLE}.status ;;
  }

  dimension: customer_id {
    description: "Unique internal (simple) identifier for the customer the application belongs to - this is the foreign key to the customer table"
    type: number
    value_format_name: id
    sql: ${TABLE}.customer_id ;;
  }

  measure: count_distinct_customers {
    description: "Count of distinct customers in the data set"
    type: count_distinct
    value_format_name: decimal_0
    sql: ${customer_id} ;;
    drill_fields: [loan_cust_app_drill_fields*]
  }

  dimension: issuance_decision_flag {
    group_label: "Funnel Progression: Final Decision"
    description: "Returns Yes if the application is approved for issuance of the product"
    type: yesno
    sql: ${issuance_decision_raw} is not null ;;
  }

  dimension_group: issuance_decision {
    group_label: "Funnel Progression: Final Decision"
    description: "First CST timestamp when the customer's application is approved for issuance"
    type: time
    timeframes: [raw, time, date, day_of_week, day_of_week_index, week, week_of_year, month, quarter, year]
    sql: ${TABLE}.issuance_decision_time ;;
  }

  dimension: issuance_decision_month_end_date {
    group_label: "Funnel Progression: Final Decision"
    description: "The end of month date for the opening of the account, e.g. any date in May 2022 would return as 05-31-22"
    type: date
    hidden: yes
    sql: date_add(date_add(date_trunc('MONTH', ${issuance_decision_raw}), cast(1 as interval month)), cast(-1 as interval day)) ;;
  }

  measure: count_issued {
    group_label: "Funnel Progression: Final Decision"
    description: "Count of applications that have a product issued"
    type: count
    value_format_name: decimal_0
    filters: [issuance_decision_flag: "yes"]
    drill_fields: [loan_cust_app_drill_fields*]
  }

  measure: pct_issued {
    group_label: "Funnel Progression: Final Decision"
    description: "Percentage of applications resulting in issued products"
    type: number
    value_format_name: percent_2
    sql: 1.0000 * ${count_issued} / nullif(${count_distinct_applications}, 0) ;;
  }

  measure: pct_issued_of_entered_verifications {
    group_label: "Funnel Progression: Final Decision"
    description: "Percentage of applications resulting in issued products out of those that entered verification."
    type: number
    value_format_name: percent_2
    sql: 1.0000 * ${count_issued} / nullif(${count_enter_verifications}, 0) ;;
    drill_fields: [loan_cust_app_drill_fields*]
  }

#################
### Applicant ###
#################

  dimension: application_device {
    group_label: "Applicant Information"
    description: "Device the applicant used to apply"
    type: string
    sql: ${TABLE}.application_device;;
  }

  # dimension: rent_or_own {
  #   group_label: "Applicant Information"
  #   description: "Categorical field denoting whether the customer is a renter or an owner, as stated on the customer application tied to this decision. There are some other values, but they are rarely seen."
  #   suggestions: ["rent", "own"]
  #   type: string
  #   sql: ${TABLE}.rent_or_own ;;
  # }

  dimension: housing_ownership_type {
    group_label: "Applicant Information"
    description: "Ownership status of the applicant's address as rent, ownwmtg, etc., at app close"
    type: string
    sql: ${TABLE}.housing_ownership_type ;;
  }

  dimension: address_state {
    group_label: "Applicant Information"
    description: "The applicant's most updated address state prior to app close"
    map_layer_name: us_states
    type: string
    sql: ${TABLE}.address_state;;
  }

  dimension: first_name {
    group_label: "Applicant Information"
    description: "Applicant's first name as most recently updated prior to app close"
    type: string
    sql: ${TABLE}.first_name;;
  }

  dimension: last_name {
    group_label: "Applicant Information"
    description: "Applicant's last name as most recently updated prior to app close"
    type: string
    sql: ${TABLE}.last_name;;
  }

  dimension: loan_purpose {
    group_label: "Applicant Information"
    description: "Purpose that the loan will be used for"
    type: string
    sql: ${TABLE}.loan_purpose ;;
  }

################
### Sourcing ###
################

  dimension: lead_sub_id {
    group_label: "Attribution"
    description: "Unique lead identifier from the lead provider, often passed back to the provider for tracking"
    type: string
    sql: ${TABLE}.lead_sub_id;;
  }

  dimension: lead_id {
    group_label: "Attribution"
    description: "Internal identifier of the lead associated with the application"
    type: number
    value_format_name: id
    sql: ${TABLE}.lead_id;;
  }

  dimension: source_raw {
    group_label: "Attribution"
    description: "Raw marketing source of the application, provided by Amount"
    type: string
    sql: ${TABLE}.source_raw ;;
  }

  dimension: source {
    group_label: "Attribution"
    description: "Cleaned marketing source of the application, pulled from the output of the source attribution pipeline, which leverages several inputs to determine the most appropriate source for the application"
    type: string
  # sql: ${TABLE}.source ;;
  # The below addition is a temporary change. Due to a sequencing issue in the LCA pipeline, the SA-generated source, channel, and channel_category are not populated from the SA dataset back to the current day's delta file for LCA. Until a fix is implemented, the LCA source is coalesced with SA source in order to reduce null values for LCA source. This will be reverted once the fix is in place.
    sql: coalesce(${TABLE}.source, ${source_attribution_loan_customer_application.source}) ;;
  }

  dimension: coupon_code {
    group_label: "Attribution"
    description: "Coupon code that the customer inputs on the application, which relates to a promotion or personal offer"
    type: string
    sql: ${TABLE}.coupon_code;;
  }

  dimension: direct_mail_flag {
    group_label: "Attribution"
    description: "Whether or not the applicant received a direct mail promotion and used it to apply. This field will be TRUE only if a promotion_id / promotion_uuid is non-NULL."
    type: yesno
    sql: ${TABLE}.direct_mail_flag;;
  }

  dimension: promotion_id {
    group_label: "Attribution"
    description: "Promotion ID to identify the promotion used in the application, if applicable"
    type: number
    value_format_name: id
    sql: ${TABLE}.promotion_id ;;
  }

  dimension: promotion_uuid {
    label: "Promotion UUID"
    group_label: "Attribution"
    description: "Promotion UUID to identify the promotion used in the application, if applicable"
    type: string
    sql: ${TABLE}.promotion_uuid;;
  }

  dimension: personal_offer_code {
    group_label: "Attribution"
    description: "Personal offer code of a promotion, which is unique to each prospect"
    type: string
    sql: ${TABLE}.personal_offer_code ;;
  }

  dimension: campaign_name {
    group_label: "Attribution"
    description: "Campaign name of the mail promotion, which is only populated if the direct_mail_flag is true"
    type: string
    sql: ${TABLE}.campaign_name;;
  }

  dimension: creative_code {
    group_label: "Attribution"
    description: "Coupon code for established promotions i.e. direct mail; initial source is the promotions table in avant-basic"
    type: string
    sql: ${TABLE}.creative_code;;
  }

  dimension: referrer_url {
    label: "Referrer URL"
    group_label: "Attribution"
    description: "The URL through which the customer was referred in order to land on our site"
    type: string
    sql: ${TABLE}.referrer_url ;;
  }

  # dimension: utm_source {
  #   label: "UTM Source"
  #   group_label: "Attribution"
  #   description: "The UTM (Urchin tracking module) source parameter from the URL, tracking where the traffic is coming from by adding more information to the end of the URL"
  #   type: string
  #   sql: ${TABLE}.utm_source;;
  # }

  dimension: direct_mail_explicit_match_flag {
    group_label: "Attribution"
    description: "Returns yes if the applicant's PII matches a mailed customer and they are a direct_mail_possible_explicit_match"
    type: yesno
    sql: ${TABLE}.direct_mail_explicit_match_flag ;;
  }

  dimension: direct_mail_possible_explicit_match_flag {
    group_label: "Attribution"
    description: "Returns yes if the applicant claims a direct mail promo code or personal offer code that match with a DM preselection record"
    type: yesno
    sql: ${TABLE}.direct_mail_possible_explicit_match_flag ;;
  }

  dimension: direct_mail_fuzzy_match_flag {
    group_label: "Attribution"
    description: "Returns yes if the applicant's PII matches a mailed customer and they are a direct_mail_possible_fuzzy_match"
    type: yesno
    sql: ${TABLE}.direct_mail_fuzzy_match_flag ;;
  }

  dimension: direct_mail_possible_fuzzy_match_flag {
    group_label: "Attribution"
    description: "Returns yes if the applicant listed 'Mail Offer' in response to \"How did you hear about us?\" in Step 1, but entered no promo code"
    type: yesno
    sql: ${TABLE}.direct_mail_possible_fuzzy_match_flag ;;
  }

  dimension: channel_raw {
    group_label: "Attribution"
    description: "Raw marketing channel associated with the source of the application - from Amount"
    type: string
    sql: ${TABLE}.channel_raw ;;
  }

  dimension: channel {
    group_label: "Attribution"
    description: "Channel grouping of marketing sources, rolled up into the preliminary grouping used for marketing bucketing and analysis"
    type: string
  # sql: ${TABLE}.channel ;;
  # The below addition is a temporary change. Due to a sequencing issue in the LCA pipeline, the SA-generated source, channel, and channel_category are not populated from the SA dataset back to the current day's delta file for LCA. Until a fix is implemented, the LCA source is coalesced with SA source in order to reduce null values for LCA source. This will be reverted once the fix is in place.
    sql: coalesce(${TABLE}.channel, ${source_attribution_loan_customer_application.channel}) ;;
  }

  dimension: channel_category {
    group_label: "Attribution"
    description: "High-level grouping of marketing channels, rolled up into the secondary, consolidated grouping used for marketing bucketing and analysis"
    type: string
  # sql: ${TABLE}.channel_category ;;
  # The below addition is a temporary change. Due to a sequencing issue in the LCA pipeline, the SA-generated source, channel, and channel_category are not populated from the SA dataset back to the current day's delta file for LCA. Until a fix is implemented, the LCA source is coalesced with SA source in order to reduce null values for LCA source. This will be reverted once the fix is in place.
    sql: coalesce(${TABLE}.channel_category, ${source_attribution_loan_customer_application.channel_category}) ;;
  }

  dimension: cross_sell_flag {
    group_label: "Attribution"
    description: "Whether or not the applicant channel is XL"
    type: yesno
    sql: ${channel_raw} = 'Cross-Sell' ;;
  }

############################
### Product Information  ###
############################

  dimension: apr {
    label: "APR"
    group_label: "Product Information"
    description: "APR for the product that was applied for"
    type: number
    value_format_name: percent_2
    sql: ${TABLE}.apr ;;
  }

  dimension: apr_subtier {
    label: "APR Sub-tier"
    group_label: "Product Information"
    description: "Subtier for application used to determine APR"
    type: string
    sql: ${TABLE}.apr_subtier ;;
  }

  dimension: apr_tier {
    label: "APR Tier"
    group_label: "Product Information"
    description: "Tier for the application used to determine APR"
    type: string
    sql: ${TABLE}.apr_tier ;;
  }

  dimension: apr_weighted {
    label: "APR Weighted"
    group_label: "Product Information"
    description: "APR weighted by the loan amount."
    hidden: yes
    sql: ${apr} * ${loan_amount} ;;
  }

  measure: sum_apr_weighted {
    label: "Sum APR Weighted"
    group_label: "Product Information"
    hidden: yes
    description: "Sum of APR weighted by the loan amount. Filtered to loans where APR is not null."
    type: sum
    value_format_name: percent_2
    sql: ${apr_weighted} ;;
    filters: [apr: "not null"]
    drill_fields: [loan_cust_app_drill_fields*]
  }

  measure: sum_amount_weighted_for_avg_apr {
    label: "Sum Amount Weighted Avg APR"
    group_label: "Product Information"
    hidden: yes
    description: "Sum of amount. Filtered to loans where APR is not null."
    type: sum
    value_format_name: usd
    sql: ${loan_amount} ;;
    filters: [apr: "not null"]
    drill_fields: [loan_cust_app_drill_fields*]
  }

  measure: avg_apr {
    label: "Avg APR"
    group_label: "Product Information"
    description: "Avg APR for the product that was applied for"
    type: average
    value_format_name: percent_2
    sql: ${apr} ;;
  }

  measure: weighted_avg_apr {
    label: "Weighted Avg APR"
    group_label: "Product Information"
    description: "Average APR weighted by loan amount."
    type: number
    value_format_name: percent_2
    sql: 1.0000 * ${sum_apr_weighted} / nullif(${sum_amount_weighted_for_avg_apr}, 0) ;;
    drill_fields: [loan_cust_app_drill_fields*]
  }

  dimension: interest_rate {
    group_label: "Product Information"
    description: "Interest rate"
    type: number
    value_format_name: percent_2
    sql: ${TABLE}.interest_rate ;;
  }

  measure: weighted_avg_interest_rate {
    group_label: "Product Information"
    description: "Average interest rate weighted by loan amount."
    type: number
    value_format_name: percent_2
    sql: 1.0000 * sum(${interest_rate} * ${loan_amount}) / nullif(sum(${loan_amount}), 0) ;;
    drill_fields: [loan_cust_app_drill_fields*]
  }

  dimension: product_type {
    group_label: "Product Information"
    description: "The type of loan, either installment or refinance, determined by the policy for which the product is underwritten"
    suggestions: ["installment", "refinance"]
    type: string
    sql: case when ${channel_raw} = 'Cross-Sell' then 'cross-sell' else ${TABLE}.product_type end ;;
  }

  dimension: prime_loan_category {
    group_label: "Product Information"
    description: "Category of loan (prime vs near-prime)"
    suggestions: ["near_prime", "prime"]
    type: string
    sql: ${TABLE}.prime_loan_category ;;
  }

  dimension: loan_amount {
    group_label: "Product Information"
    description: "Total amount of the loan"
    type: number
    value_format_name: usd
    sql: ${TABLE}.loan_amount ;;
  }

  measure: sum_loan_amount {
    group_label: "Product Information"
    description: "Sum of the total amount of the loan"
    type: sum
    value_format_name: usd_0
    sql: ${loan_amount} ;;
    drill_fields: [loan_cust_app_drill_fields*]
  }

  measure: avg_loan_amount {
    group_label: "Product Information"
    description: "Average of the total amount of the loan"
    type: average
    value_format_name: usd_0
    sql: ${loan_amount} ;;
    drill_fields: [loan_cust_app_drill_fields*]
  }

  dimension: disbursement_amount {
    group_label: "Product Information"
    description: "Dollar amount to be disbursed to the applicant, minus the admin fee"
    type: number
    value_format_name: usd
    sql: ${TABLE}.disbursement_amount ;;
  }

  dimension: returning_customer_flag {
    group_label: "Product Information"
    description: "Whether or not the applicant is considered a returning customer"
    type: yesno
    sql: ${TABLE}.returning_customer_flag ;;
  }

  dimension: customer_type {
    group_label: "Product Information"
    description: "Customer status as new, returning, refinance"
    type: string
    suggestions: ["new","returning","refinance","cross-sell"]
    sql: case when ${channel_raw} = 'Cross-Sell' then 'cross-sell' else ${TABLE}.returning_customer_status end ;;
  }

  dimension: pagaya_flag {
    group_label: "Product Information"
    description: "Returns yes if this is a Pagaya application."
    type: yesno
    sql: ${last_cd_product_owner} = 'pagaya' ;;
  }

  dimension: admin_fee_amount {
    group_label: "Product Information"
    description: "Fee for originating the loan"
    type: number
    value_format_name: usd
    sql: ${TABLE}.admin_fee_amount ;;
  }

  measure: sum_admin_fee_amount {
    group_label: "Product Information"
    description: "Sum of the fees for originating the loan"
    type: sum
    value_format_name: usd
    sql: ${admin_fee_amount} ;;
  }

  dimension: admin_fee_percentage {
    group_label: "Product Information"
    description: "Percentage of the loan amount requested that is used to calculate the origination_fee"
    type: number
    value_format_name: percent_2
    sql: ${TABLE}.admin_fee_percentage ;;
  }

  measure: weighted_avg_admin_fee_percentage {
    group_label: "Product Information"
    description: "Average admin fee percentage weighted by loan amount"
    type: number
    value_format_name: percent_2
    sql: 1.0000 * sum(${admin_fee_percentage} * ${loan_amount}) / nullif(sum(${loan_amount}), 0) ;;
    drill_fields: [loan_cust_app_drill_fields*]
  }

  dimension: payment_method {
    group_label: "Product Information"
    description: "Expected payment method"
    type: string
    sql: ${TABLE}.payment_method ;;
  }

  dimension_group: origination {
    group_label: "Product Information"
    description: "Date of loan origination - this is the data that should be used for vintages"
    type: time
    timeframes: [raw, date, week, month, quarter, year]
    sql: ${TABLE}.origination_date ;;
  }

  dimension: loan_id {
    group_label: "Product Information"
    description: "Unique identifier for the loan resulting from the customer application"
    type: string
    sql: ${TABLE}.loan_id ;;
  }

  measure: count_distinct_loans {
    group_label: "Product Information"
    description: "Count of distinct loansthat are associated with applications, i.e. those that are issued"
    type: count_distinct
    value_format_name: decimal_0
    sql: ${loan_id} ;;
    drill_fields: [loan_cust_app_drill_fields*]
  }

##############################
### Eligibility Decisions  ###
##############################

  dimension: last_eligibility_decision_id {
    group_label: "Eligibility Decisions"
    description: "Unique identifier for the last eligibility decision associated with an application"
    type: number
    value_format_name: id
    sql: ${TABLE}.last_eligibility_decision_id;;
  }

  dimension: last_eligibility_decline_reasons {
    group_label: "Eligibility Decisions"
    description: "All decline reasons from the last eligibiity decision - these are presented in no particular order"
    type: string
    sql: list_to_delimited_string(${TABLE}.last_eligibility_decline_reasons, ',') ;;
  }

  measure: count_eligibility_decisioned {
    group_label: "Eligibility Decisions"
    description: "Count of applications that were eligibility decisioned"
    type: count
    value_format_name: decimal_0
    filters: [last_eligibility_decision_id: "NOT NULL"]
  }

########################
### Credit Decisions ###
########################

  # dimension: emerging_segment_flag {
  #   group_label: "Credit Decisions"
  #   description: "Returns yes if the customer is part of the emerging segment, as opposed to the established segment"
  #   type: yesno
  #   sql: ${TABLE}.emerging_flag ;;
  # }

  dimension: last_cd_id {
    label: "Last CD ID"
    group_label: "Credit Decisions"
    description: "ID of the last credit decision associated with the application; last credit decision prior to the final_application_decision"
    type: number
    value_format_name: id
    sql: ${TABLE}.last_cd_id;;
  }

  measure: count_credit_decisioned {
    group_label: "Credit Decisions"
    description: "Count of applications that were credit decisioned"
    type: count
    value_format_name: decimal_0
    filters: [last_cd_id: "NOT NULL"]
  }

  # dimension: credit_decline_reasons {
  #   group_label: "Credit Decisions"
  #   description: "All decline reasons from the last credit decision - these are presented in no particular order"
  #   type: string
  #   sql: list_to_delimited_string(${TABLE}.credit_decline_reasons, ',') ;;
  # }

  dimension_group: last_cd_created {
    label: "Last CD Created"
    group_label: "Credit Decisions"
    description: "Time of creation of the last credit decision for the application"
    type: time
    timeframes: [raw, time]
    sql: ${TABLE}.last_cd_created_time;;
  }

  dimension: last_cd_product_owner {
    label: "Last CD Product Owner"
    group_label: "Credit Decisions"
    description: "Owner of the loan product when the last credit decision was made"
    type: string
    sql: ${TABLE}.last_cd_product_owner ;;
  }

  dimension: last_cd_fico_score {
    label: "Last CD FICO Score"
    group_label: "Credit Decisions"
    description: "FICO score from the most recent credit decision prior to final application decision"
    type: number
    value_format_name: decimal_0
    sql: ${TABLE}.last_cd_fico_score;;
  }

  measure: avg_last_cd_fico_score {
    label: "Avg Last CD FICO Score"
    group_label: "Credit Decisions"
    description: "Average FICO score from the most recent credit decision prior to final application decision"
    type: average
    value_format_name: decimal_0
    sql: ${last_cd_fico_score} ;;
    drill_fields: [loan_cust_app_drill_fields*]
  }

  measure: avg_issued_last_cd_fico_score {
    label: "Avg Issued Last CD FICO Score"
    group_label: "Credit Decisions"
    description: "Average FICO score from the most recent credit decision prior to final application decision, for issued cards."
    type: average
    value_format_name: decimal_0
    sql: ${last_cd_fico_score} ;;
    filters: [issuance_decision_flag: "yes"]
    drill_fields: [loan_cust_app_drill_fields*]
  }

  # dimension: last_cd_vantage_3_score {
  #   label: "Last CD Vantage 3 Score"
  #   group_label: "Credit Decisions"
  #   description: "Vantage 3 score from the most recent credit decision prior to final application decision"
  #   type: number
  #   value_format_name: decimal_0
  #   sql: ${TABLE}.cd_final_vantage_3_score ;;
  #   drill_fields: [loan_cust_app_drill_fields*]
  # }

  dimension: last_cd_model_decline_score {
    label: "Last CD Model Decline Score"
    group_label: "Credit Decisions"
    description: "Model decline score from the most recent credit decision prior to final application decision"
    type: number
    value_format_name: decimal_4
    sql: ${TABLE}.last_cd_model_decline_score;;
  }

  measure: avg_last_cd_model_decline_score {
    label: "Avg Last CD Model Decline Score"
    group_label: "Credit Decisions"
    description: "Average model score from the most recent credit decision prior to final application decision"
    type: average
    value_format_name: decimal_4
    sql: ${last_cd_model_decline_score} ;;
    drill_fields: [loan_cust_app_drill_fields*]
  }

  measure: avg_issued_last_cd_model_decline_score {
    label: "Avg Issued Last CD Model Decline Score"
    group_label: "Credit Decisions"
    description: "Average model score from the most recent credit decision prior to final application decision, for issued cards"
    type: average
    value_format_name: decimal_4
    sql: ${last_cd_model_decline_score} ;;
    filters: [issuance_decision_flag: "yes"]
    drill_fields: [loan_cust_app_drill_fields*]
  }

  dimension: last_cd_monthly_net_income {
    label: "Last CD Monthly Net Income"
    group_label: "Credit Decisions"
    description: "MNI (monthly net income) from the most recent credit decision prior to final application decision"
    type: number
    value_format_name: usd
    sql: ${TABLE}.last_cd_monthly_net_income;;
  }

  measure: avg_last_cd_monthly_net_income {
    label: "Avg Last CD Monthly Net Income "
    group_label: "Credit Decisions"
    description: "Average MNI (monthly net income) from the most recent credit decision prior to final application decision"
    type: average
    value_format_name: usd
    sql: ${last_cd_monthly_net_income} ;;
    drill_fields: [loan_cust_app_drill_fields*]
  }

  measure: avg_issued_last_cd_monthly_net_income {
    label: "Avg Issued Last CD Monthly Net Income "
    group_label: "Credit Decisions"
    description: "Average MNI from the most recent credit decision prior to final application decision, for issued cards"
    type: average
    value_format_name: usd
    sql: ${last_cd_monthly_net_income} ;;
    drill_fields: [loan_cust_app_drill_fields*]
  }

  dimension: prefunding_dti {
    label: "Last CD Prefunding DTI"
    group_label: "Credit Decisions"
    description: "Ratio of the applicant's monthly debt to monthly net income, not including funds applied for."
    type: number
    value_format_name: decimal_4
    sql: ${TABLE}.prefunding_dti ;;
  }

  measure: weighted_avg_prefunding_dti {
    label: "Weighted Avg Last CD Prefunding DTI"
    group_label: "Credit Decisions"
    description: "Average prefunding DTI, weighted by loan amount."
    type: number
    value_format_name: decimal_4
    sql: 1.0000 * sum(${prefunding_dti} * ${loan_amount}) / nullif(sum(${loan_amount}), 0) ;;
    drill_fields: [loan_cust_app_drill_fields*]
  }

  dimension: prefunding_pti {
    label: "Last CD Prefunding PTI"
    group_label: "Credit Decisions"
    description: "Ratio of the applicant's monthly payments on selected loan product to monthly net income"
    type: number
    value_format_name: decimal_4
    sql: ${TABLE}.loan_contract_monthly_payment_amount / nullif(${TABLE}.last_cd_monthly_net_income, 0) ;;
  }

  dimension: product_decline_reasons {
    group_label: "Credit Decisions"
    description: "All decline reasons from the last product decision - these are presented in no particular order"
    type: string
    sql: list_to_delimited_string(${TABLE}.product_decline_reasons, ',') ;;
  }

  dimension: last_cd_gross_debt_service_ratio {
    label: "Last CD Gross Debt Service Ratio"
    group_label: "Credit Decisions"
    description: "Gross debt service ratio from the most recent credit decision prior to final application decision"
    type: number
    value_format_name: decimal_4
    sql: ${TABLE}.last_cd_gross_debt_service_ratio ;;
  }

  dimension: last_cd_prefunding_tdsr {
    label: "Last CD Prefunding TDSR"
    group_label: "Credit Decisions"
    description: "TDSR prior to funding from the most recent credit decision prior to final application decision"
    type: number
    value_format_name: decimal_4
    sql: ${TABLE}.last_cd_prefunding_tdsr ;;
  }

  measure: weighted_avg_last_cd_prefunding_tdsr {
    label: "Weighted Avg Last CD Prefunding TDSR"
    group_label: "Credit Decisions"
    description: "Average pre-funding TDSR from the most recent credit decision prior to final application decision, weighted by loan amount."
    type: number
    value_format_name: decimal_4
    sql: 1.0000 * sum(${last_cd_prefunding_tdsr} * ${loan_amount}) / nullif(sum(${loan_amount}), 0) ;;
    drill_fields: [loan_cust_app_drill_fields*]
  }

  dimension: last_cd_product_rating {
    label: "Last CD Product Rating"
    group_label: "Credit Decisions"
    description: "Product rating in most recent credit decision for the application at app close"
    type: string
    sql: ${TABLE}.last_cd_product_rating ;;
  }

  dimension: last_cd_product_rating_tiers {
    label: "Last CD Product Rating Tiers"
    group_label: "Credit Decisions"
    description: "Product rating letter from the most recent credit decision prior to issuance for issued loans, or most recent loan status log for non-issued loans."
    suggestions: ["a","b","c","d","e","f"]
    type: string
    sql: substr(${last_cd_product_rating}, 1, 1) ;;
  }

  dimension: last_cd_has_thin_tu_file {
    label: "Last CD Has Thin TU File"
    group_label: "Credit Decisions"
    description: "Returns yes if the applicant has a thin TU file, meanining that they have less than 60 months of credit history"
    type: yesno
    sql:coalesce(${loan_credit_decision.has_thin_tu_file},${loan_decision.thin_file_2_eligible_flag});;
  }

  dimension: decision_data_source {
    group_label: "Credit Decisions"
    description: "Determines which decision table to use for this application"
    type: string
    sql: ${TABLE}.decision_data_source ;;
  }

  measure: count_thin_file_issuances {
    label: "Count Thin File Issuances"
    group_label: "Credit Decisions"
    description: "Count of issuances that has a thin TU file, meanining that they have less than 60 months of credit history"
    type: count
    filters: [last_cd_has_thin_tu_file: "yes", issuance_decision_flag: "yes"]
  }

  measure: pct_thin_file_issued {
    label: "Pct Thin File Issued"
    group_label: "Credit Decisions"
    description: "Percentage of issuances that has a thin TU file, meanining that they have less than 60 months of credit history"
    type: number
    value_format_name: percent_1
    sql: 1.0000 * ${count_thin_file_issuances} / nullif(${count_issued}, 0) ;;
  }

###########################
### Funnel: Personal    ###
###########################

  dimension: imported_flag {
    group_label: "Funnel Progression:  (1) Personal"
    description: "Whether or not the application is imported from a lead"
    type: yesno
    sql: ${TABLE}.imported_flag ;;
  }

  measure: count_personal_imported {
    group_label: "Funnel Progression:  (1) Personal"
    description: "Count of applications that are imported from a lead in the personal stage."
    type:  count
    value_format_name: decimal_0
    filters: {
      field: imported_flag
      value: "true"
    }
  }

  dimension_group: first_personal_view {
    group_label: "Funnel Progression:  (1) Personal"
    description: "The CST timetamp of the applicant's first view of the personal stage, or first credit decision time if there is no timestamp for the personal view, which could happen if the application was started on a lead provider site. Note that we do not receive applications from Amount that do not submit step 1."
    type: time
    timeframes: [raw, time, date, day_of_week]
    sql: coalesce(${TABLE}.first_personal_view_time, ${TABLE}.first_cd_created_time, ${TABLE}.last_cd_created_time) ;;
    }

  dimension: personal_view_flag {
    group_label: "Funnel Progression:  (1) Personal"
    description: "Returns yes if the applicant viewed the personal stage or was decisioned from a third party lead provider site. Note that we do not receive applications from Amount that do not submit step 1."
    type: yesno
    sql: ${first_personal_view_raw} is not null ;;
  }

  measure: count_personal_view {
    group_label: "Funnel Progression:  (1) Personal"
    description: "Count of distinct customers that viewed Step 1. Note that we do not receive applications from Amount that do not submit step 1."
    type: count
    value_format_name: decimal_0
    filters: [personal_view_flag: "yes"]
    drill_fields: [loan_cust_app_drill_fields*]
  }

  dimension_group: first_personal_view_from_website {
    group_label: "Funnel Progression:  (1) Personal"
    description: "CST timetamp for the applicant's first view of the personal page from a website"
    type: time
    timeframes: [raw, time, date, day_of_week]
    sql: ${TABLE}.first_personal_view_from_website_time;;
  }

  dimension: personal_view_from_website_flag {
    group_label: "Funnel Progression:  (1) Personal"
    description: "Returns yes if the applicant viewed the personal stage on the Avant website"
    type: yesno
    sql: ${first_personal_view_from_website_raw} is not null ;;
  }

  measure: count_personal_view_from_website {
    group_label: "Funnel Progression:  (1) Personal"
    description: "Count of applications that viewed the personal stage from the Avant website"
    type: count
    filters: [personal_view_from_website_flag: "yes"]
  }

  dimension_group: first_personal_submit {
    group_label: "Funnel Progression:  (1) Personal"
    description: "The CST timetamp of the applicant's first submit of step 1, or first credit decision time if there is no timestamp for the personal submit. "
    type: time
    timeframes: [raw, time, date, day_of_week]
    sql: coalesce(${TABLE}.first_personal_submit_time, ${TABLE}.first_cd_created_time, ${TABLE}.last_cd_created_time) ;;
    }

  dimension: personal_submit_flag {
    group_label: "Funnel Progression:  (1) Personal"
    description: "Returns yes if the applicant submitted step 1 or was decisioned from a third party lead provider site"
    type: yesno
    sql: ${first_personal_submit_raw} is not null ;;
  }

  measure: count_personal_submit {
    group_label: "Funnel Progression:  (1) Personal"
    description: "Count of applications that submitted step 1 or were decisioned from a third party lead provider site"
    type: count
    value_format_name: decimal_0
    filters: [personal_submit_flag: "yes"]
    drill_fields: [loan_cust_app_drill_fields*]
  }

  dimension_group: first_personal_submit_from_website {
    group_label: "Funnel Progression:  (1) Personal"
    description: "CST timetamp for the applicant's first submit of the personal page from a website"
    type: time
    timeframes: [raw, time, date, day_of_week]
    sql: ${TABLE}.first_personal_submit_from_website_time;;
  }

  dimension: personal_submit_from_website_flag {
    group_label: "Funnel Progression:  (1) Personal"
    description: "Returns yes if the applicant submitted the personal stage on the Avant website"
    type: yesno
    sql: ${first_personal_submit_from_website_raw} is not null ;;
  }

  measure: count_personal_submit_from_website {
    group_label: "Funnel Progression:  (1) Personal"
    description: "Count of applications that submitted the personal stage from the Avant website"
    type: count
    filters: [personal_submit_from_website_flag: "yes"]
  }

  dimension_group: first_personal_attempt_from_website_time {
    group_label: "Funnel Progression:  (1) Personal"
    description: "CST timestamp for the first attempted personal submit from the Avant website"
    type: time
    timeframes: [raw, time, date, day_of_week]
    sql: ${TABLE}.first_personal_attempt_from_website_time ;;
  }

  dimension: personal_attempt_from_website_flag {
    group_label: "Funnel Progression:  (1) Personal"
    description: "Returns yes if the applicant attempted to submit the personal stage on the Avant website"
    type: yesno
    sql: ${first_personal_attempt_from_website_time_raw} is not null ;;
  }

  measure: count_personal_attempt_from_website {
    group_label: "Funnel Progression:  (1) Personal"
    description: "Count of applications that attempted to submit the personal stage from the Avant website"
    type: count
    filters: [personal_attempt_from_website_flag: "yes"]
  }


#############################
### Funnel: Rates & Terms ###
#############################

  dimension_group: first_rates_terms_view {
    group_label: "Funnel Progression: (2) Rates & Terms"
    description: "CST timetamp for the applicant's first view of the rates & terms page"
    type: time
    timeframes: [raw, time, date]
    sql: ${TABLE}.first_rates_terms_view_time;;
  }

  dimension: rates_terms_view_flag {
    group_label: "Funnel Progression: (2) Rates & Terms"
    description: "Returns yes if the applicant viewed the rates & terms page"
    type: yesno
    sql: ${first_rates_terms_view_raw} is not null ;;
  }

  measure: count_rates_terms_view {
    label: "Count Rates & Terms View"
    group_label: "Funnel Progression: (2) Rates & Terms"
    description: "Count of applications that viewed the rates & terms page"
    type: count
    value_format_name: decimal_0
    filters: [rates_terms_view_flag: "yes"]
    drill_fields: [loan_cust_app_drill_fields*]
  }

  dimension_group: first_rates_terms_submit {
    group_label: "Funnel Progression: (2) Rates & Terms"
    description: "CST timestamp for the first successful rates terms submit"
    type: time
    timeframes: [raw, time, date]
    sql: ${TABLE}.first_rates_terms_submit_time;;
  }

  dimension: rates_terms_submit_flag {
    group_label: "Funnel Progression: (2) Rates & Terms"
    description: "Returns yes if the applicant submitted the rates & terms page"
    type: yesno
    sql: ${first_rates_terms_submit_raw} is not null ;;
  }

  measure: count_rates_terms_submit {
    label: "Count Rates & Terms Submit"
    group_label: "Funnel Progression: (2) Rates & Terms"
    description: "Count of applications that submitted the rates & terms page"
    type:  count
    value_format_name: decimal_0
    filters: [rates_terms_submit_flag: "yes"]
    drill_fields: [loan_cust_app_drill_fields*]
  }

  measure:  pct_rates_terms_submit_of_view {
    label: "Pct Rates & Terms Submit of View"
    group_label: "Funnel Progression: (2) Rates & Terms"
    description: "Percentage of applications that submitted the rates & terms page out of those that viewed rates & terms"
    type: number
    value_format_name: percent_1
    sql:  1.00 * ${count_rates_terms_submit} / nullif(${count_rates_terms_view}, 0) ;;
    drill_fields: [loan_cust_app_drill_fields*]
  }

  dimension_group: first_rates_terms_attempt {
    group_label: "Funnel Progression: (2) Rates & Terms"
    description: "CST timestamp for the first attempted rates terms submit."
    type: time
    timeframes: [raw, time, date]
    sql: ${TABLE}.first_rates_terms_attempt_time ;;
  }

  dimension: rates_terms_attempt_flag {
    group_label: "Funnel Progression: (2) Rates & Terms"
    description: "Returns yes if the applicant attempted to submit the rates & terms page"
    type: yesno
    sql: ${first_rates_terms_attempt_raw} is not null ;;
  }

  measure: count_rates_terms_attempt {
    label: "Count Rates & Terms Attempt to Submit"
    group_label: "Funnel Progression: (2) Rates & Terms"
    description: "Count of applications that attempted to submit the rates & terms page"
    type:  count
    value_format_name: decimal_0
    filters: [rates_terms_attempt_flag: "yes"]
    drill_fields: [loan_cust_app_drill_fields*]
  }



#############################
### Funnel: Contract ###
#############################

  dimension_group: first_contract_view {
    group_label: "Funnel Progression: (3) Contract"
    description: "CST timetamp for the applicant's first view of the contract page"
    type: time
    timeframes: [raw, time, date]
    sql: ${TABLE}.first_contract_view_time;;
  }

  dimension: contract_view_flag {
    group_label: "Funnel Progression: (3) Contract"
    description: "Returns yes if the applicant viewed the contract page"
    type: yesno
    sql: ${first_contract_view_raw} is not null ;;
  }

  measure: count_contract_view {
    group_label: "Funnel Progression: (3) Contract"
    description: "Count of applications that viewed the contract page"
    type: count
    value_format_name: decimal_0
    filters: [contract_view_flag: "yes"]
    drill_fields: [loan_cust_app_drill_fields*]
  }

  dimension_group: first_contract_submit {
    group_label: "Funnel Progression: (3) Contract"
    description: "CST timestamp for the first successful contract submit"
    type: time
    timeframes: [raw, time, date]
    sql: ${TABLE}.first_contract_submit_time;;
  }

  dimension: contract_submit_flag {
    group_label: "Funnel Progression: (3) Contract"
    description: "Returns yes if the applicant submitted the contract page"
    type: yesno
    sql: ${first_contract_submit_raw} is not null ;;
  }

  measure: count_contract_submit {
    group_label: "Funnel Progression: (3) Contract"
    description: "Count of applications that submitted the contract page"
    type:  count
    value_format_name: decimal_0
    filters: [contract_submit_flag: "yes"]
    drill_fields: [loan_cust_app_drill_fields*]
  }

  dimension_group: first_contract_attempt_to_submit {
    group_label: "Funnel Progression: (3) Contract"
    description: "CST timestamp for the first attempted contract submit."
    type: time
    timeframes: [raw, time, date]
    sql: ${TABLE}.first_contract_attempt_time ;;
  }

  dimension: contract_attempt_to_submit_flag {
    group_label: "Funnel Progression: (3) Contract"
    description: "Returns yes if the applicant attempted to submit the contract page"
    type: yesno
    sql: ${first_contract_attempt_to_submit_raw} is not null ;;
  }

  measure: count_contract_attempt_to_submit {
    group_label: "Funnel Progression: (3) Contract"
    description: "Count of applications that attempted to submit the contract page"
    type:  count
    value_format_name: decimal_0
    filters: [contract_attempt_to_submit_flag: "yes"]
    drill_fields: [loan_cust_app_drill_fields*]
  }


############################
### Funnel: Verifications###
############################

  dimension_group: enter_verifications {
    group_label: "Funnel Progression: Verifications"
    description: "First CST timestamp for when the applicant enters the verification stage and starts ver processing"
    type: time
    timeframes: [raw, time, hour_of_day, date, day_of_week]
    sql: ${TABLE}.enter_verification_time;;
  }

  dimension: enter_verifications_flag {
    group_label: "Funnel Progression: Verifications"
    description: "Returns yes if the applicant completes the application and enters the verification stage to start ver processing"
    type: yesno
    sql: ${enter_verifications_raw} is not null ;;
  }

  measure: count_enter_verifications {
    group_label: "Funnel Progression: Verifications"
    description: "Count of applications that enter the verification stage to start ver processing"
    type: count
    value_format_name: decimal_0
    filters: [enter_verifications_flag: "yes"]
    drill_fields: [loan_cust_app_drill_fields*]
  }

  measure:  pct_enter_verifications_of_rates_terms_submit {
    label: "Pct Enter Verifications of Rates & Terms Submit"
    group_label: "Funnel Progression: Verifications"
    description: "Percentage of applications that entered verifications out of those that submitted the rates & terms page"
    type: number
    value_format_name: percent_1
    sql:  1.00 * ${count_enter_verifications} / nullif(${count_rates_terms_submit}, 0) ;;
    drill_fields: [loan_cust_app_drill_fields*]
  }

  dimension: bank_account_verified_flag {
    group_label: "Funnel Progression: Verifications"
    description: "Whether or not the customer's bank account has been verified"
    type: yesno
    sql: ${TABLE}.bank_account_verified_flag ;;
  }

  measure: count_bank_account_verified {
    group_label: "Funnel Progression: Verifications"
    description: "Count of applications in which the applicant's bank account information was verified"
    type: count
    filters: {
      field: bank_account_verified_flag
      value: "yes"
    }
  }

  measure: pct_bank_account_verified {
    group_label: "Funnel Progression: Verifications"
    description: "Percentage of applications in which the applicant's bank account information was verified"
    type: number
    value_format_name: percent_2
    sql: 1.0000 * ${count_bank_account_verified} / NULLIF(${count}, 0) ;;
  }

  dimension: identity_verified_flag {
    group_label: "Funnel Progression: Verifications"
    description: "Whether or not the customer's identity has been verified"
    type: yesno
    sql: ${TABLE}.identity_verified_flag ;;
  }

  measure: count_identity_verified {
    group_label: "Funnel Progression: Verifications"
    description: "Count of applications in which the applicant's identity was verified"
    type: count
    filters: {
      field: identity_verified_flag
      value: "yes"
    }
  }

  measure: pct_identity_verified {
    group_label: "Funnel Progression: Verifications"
    description: "Percentage of applications in which the applicant's identity was verified"
    type: number
    value_format_name: percent_2
    sql: 1.0000 * ${count_identity_verified} / NULLIF(${count}, 0) ;;
  }

  dimension: income_amount_verified_flag {
    group_label: "Funnel Progression: Verifications"
    description: "Whether or not the income amount has been verified"
    type: yesno
    sql: ${TABLE}.income_amount_verified_flag ;;
  }

  measure: count_income_amount_verified {
    group_label: "Funnel Progression: Verifications"
    description: "Count of applications in which the applicant's income amount was verified"
    type: count
    filters: {
      field: income_amount_verified_flag
      value: "yes"
    }
  }

  measure: pct_income_amount_verified {
    group_label: "Funnel Progression: Verifications"
    description: "Percentage of applications in which the applicant's income amount was verified"
    type: number
    value_format_name: percent_2
    sql: 1.0000 * ${count_income_amount_verified} / NULLIF(${count}, 0) ;;
  }

  dimension: income_amount_verification_method {
    group_label: "Funnel Progression: Verifications"
    description: "How the income amount was verified if required"
    type: string
    sql: ${TABLE}.income_amount_verification_method ;;
  }

  dimension: income_source_verification_method {
    group_label: "Funnel Progression: Verifications"
    description: "How the income souce was verified if required"
    type: string
    sql: ${TABLE}.income_source_verification_method ;;
  }

  dimension: stage_gather_prerequisites_flag {
    group_label: "Funnel Progression: Verifications"
    description: "Returns yes if the applicant enters the gather prerequisites stage of verifications"
    type: yesno
    sql: ${stage_gather_prerequisites_first_start_raw} is not null ;;
  }

  dimension_group: stage_gather_prerequisites_first_start {
    group_label: "Funnel Progression: Verifications"
    description: "When the applicant first entered the gather prerequisites stage of verifications"
    type: time
    timeframes: [raw, time]
    sql: ${TABLE}.stage_gather_prerequisites_first_start_time ;;
  }

  measure: count_entered_gather_prerequisites_verifications_stage {
    group_label: "Funnel Progression: Verifications"
    description: "Number of applications that entered the gather prerequisites stage of verifications"
    type: count
    value_format_name: decimal_0
    filters: [stage_gather_prerequisites_flag: "yes"]
    drill_fields: [loan_cust_app_drill_fields*]
  }

  measure: pct_gather_prerequisites_verifications_of_entered_verification {
    group_label: "Funnel Progression: Verifications"
    description: "Percentage of applications that entered the gather prerequisites verifications stage of those that entered verifications"
    type: number
    value_format_name: percent_1
    sql: 1.00 * ${count_entered_gather_prerequisites_verifications_stage} / nullif(${count_enter_verifications}, 0) ;;
  }

  dimension: stage_primary_flag {
    group_label: "Funnel Progression: Verifications"
    description: "Returns yes if the applicant enters the primary stage of verifications"
    type: yesno
    sql: ${stage_primary_first_start_raw} is not null ;;
  }

  dimension_group: stage_primary_first_start {
    group_label: "Funnel Progression: Verifications"
    description: "When the applicant first entered the primary stage of verifications"
    type: time
    timeframes: [raw, time]
    sql: ${TABLE}.stage_primary_first_start_time ;;
  }

  measure: count_entered_primary_verifications_stage {
    group_label: "Funnel Progression: Verifications"
    description: "Number of applications that entered the primary stage of verifications"
    type: count
    value_format_name: decimal_0
    filters: [stage_primary_flag: "yes"]
    drill_fields: [loan_cust_app_drill_fields*]
  }

  measure: pct_entered_primary_verifications_of_entered_verification {
    group_label: "Funnel Progression: Verifications"
    description: "Percentage of applications that entered the primary verifications stage of those that entered verifications"
    type: number
    value_format_name: percent_1
    sql: 1.00 * ${count_entered_secondary_verifications_stage} / nullif(${count_enter_verifications}, 0) ;;
  }

  dimension: stage_secondary_flag {
    group_label: "Funnel Progression: Verifications"
    description: "Returns yes if the applicant enters the secondary stage of verifications"
    type: yesno
    sql: ${stage_secondary_first_start_raw} is not null ;;
  }

  dimension_group: stage_secondary_first_start {
    group_label: "Funnel Progression: Verifications"
    description: "When the applicant first entered the secondary stage of verifications"
    type: time
    timeframes: [raw, time]
    sql: ${TABLE}.stage_secondary_first_start_time ;;
  }

  measure: count_entered_secondary_verifications_stage {
    group_label: "Funnel Progression: Verifications"
    description: "Number of applications that entered the secondary stage of verifications"
    type: count
    value_format_name: decimal_0
    filters: [stage_secondary_flag: "yes"]
    drill_fields: [loan_cust_app_drill_fields*]
  }

  measure: pct_entered_secondary_verifications_of_entered_verification {
    group_label: "Funnel Progression: Verifications"
    description: "Percentage of applications that entered the secondary verifications stage of those that entered verifications"
    type: number
    value_format_name: percent_1
    sql: 1.00 * ${count_entered_secondary_verifications_stage} / nullif(${count_enter_verifications}, 0) ;;
  }

  dimension: stage_complete_flag {
    group_label: "Funnel Progression: Verifications"
    description: "Returns yes if the applicant enters the completed stage of verifications"
    type: yesno
    sql: ${stage_complete_first_start_raw} is not null ;;
  }

  dimension_group: stage_complete_first_start {
    group_label: "Funnel Progression: Verifications"
    description: "When the applicant first entered the completed of verifications"
    type: time
    timeframes: [raw, time]
    sql: ${TABLE}.stage_complete_first_start_time ;;
  }

  measure: count_completed_verifications_stage {
    group_label: "Funnel Progression: Verifications"
    description: "Number of applications that entered the completed stage of verifications"
    type: count
    value_format_name: decimal_0
    filters: [stage_complete_flag: "yes"]
    drill_fields: [loan_cust_app_drill_fields*]
  }

  measure: pct_completed_verifications_stage_of_entered_verification {
    group_label: "Funnel Progression: Verifications"
    description: "Percentage of applications that entered the completed stage of verification of those that entered verifications"
    type: number
    value_format_name: percent_1
    sql: 1.00 * ${count_completed_verifications_stage} / nullif(${count_enter_verifications}, 0) ;;
  }

################################
### Funnel: Final Decision   ###
################################

  dimension: final_application_decision {
    group_label: "Funnel Progression: Final Decision"
    description: "Final decision on the application, e.g. issuance, cancellation"
    type: string
    sql: ${TABLE}.final_application_decision;;
  }

  dimension: final_application_decision_stage {
    group_label: "Funnel Progression: Final Decision"
    description: "Stage in the application funnel at which the final application decision was made"
    type: string
    sql: ${TABLE}.final_application_decision_stage;;
  }

  dimension: final_application_decision_flag {
    group_label: "Funnel Progression: Final Decision"
    description: "Returns yes if the application reached a final decision"
    type: yesno
    sql: ${final_application_decision_raw} is not null;;
  }

  dimension_group: final_application_decision {
    group_label: "Funnel Progression: Final Decision"
    description: "CST timestamp for when the final decision was made"
    type: time
    timeframes: [raw, time, date, day_of_week, week, week_of_year, month, quarter, year]
    sql: ${TABLE}.final_application_decision_time;;
  }

  dimension_group: closed {
    group_label: "Funnel Progression: Final Decision"
    description: "CST timestamp for when the application was closed"
    type: time
    timeframes: [raw, time, date]
    sql: ${TABLE}.closed_time;;
  }

  dimension: closed_flag {
    group_label: "Funnel Progression: Final Decision"
    description: "Returns yes if the application is closed"
    type: yesno
    sql: ${closed_raw} is not null;;
  }

  measure: count_closed {
    group_label: "Funnel Progression: Final Decision"
    description: "Count of applications that are closed"
    type: count
    filters: [closed_flag: "yes"]
  }


############################
### Funnel: Declined     ###
############################

  dimension_group: first_declined_view {
    group_label: "Funnel Progression: Declined"
    description: "First CST timestamp for when the applicant viewed the declined page"
    type: time
    timeframes: [raw, time, date]
    sql: ${TABLE}.first_declined_view_time;;
  }

  dimension: declined_flag {
    group_label: "Funnel Progression: Declined"
    description: "Returns yes if the application is declined"
    type: yesno
    sql: ${first_declined_view_raw} is not null ;;
  }

  measure: count_declined_viewed {
    group_label: "Funnel Progression: Declined"
    description: "Count of applications that viewed the decline page"
    type:  count
    value_format_name: decimal_0
    filters: [declined_flag: "yes"]
    drill_fields: [loan_cust_app_drill_fields*]
  }

### Field Sets

  set: loan_cust_app_drill_fields {
    fields: [
      loan_customer_application_id,
      loan_id,
      customer_id,
      created_date,
      source,
      stage,
      status,
    ]
  }


}
